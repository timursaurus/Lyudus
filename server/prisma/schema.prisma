datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String?
  picture   String?
  username  String     @unique @db.VarChar(30)
  signed_up DateTime   @default(now())
  threads   Thread[]
  profile   Profile?
  articles  Article[]
  community Community[]
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  status String
}

model Thread {
  id         Int         @id @default(autoincrement())
  title      String
  content    String      @db.VarChar(8000)
  created_at DateTime    @default(now())
  author     User        @relation(fields: [authorId], references: [id])
  authorId   Int
  topic      Topic[]
  community  Community[]
}

model Article {
  id         Int      @id @default(autoincrement())
  title      String
  content    String   @db.VarChar(8000)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  published  Boolean  @default(false)
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
}

model Topic {
  id      Int      @id @default(autoincrement())
  name    String
  threads Thread[] @relation(references: [id])
}

model Community {
  id      Int      @id @default(autoincrement())
  alias   String
  name    String
  threads Thread[] @relation(references: [id])
  staff   User     @relation(fields: [staffId], references: [id])
  staffId Int
}

model Company {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @db.VarChar(8000)
  vacancies   Vacancy[] @relation(references: [id])

}

model Vacancy {
  id      Int       @id @default(autoincrement())
  name    String
  company Company[]

}
